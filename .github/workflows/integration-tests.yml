name: Integration Tests

on:
  workflow_call:
    inputs:
      all_platforms:
        required: true
        type: boolean
      num_shards:
        required: true
        type: number

env:
  dotnet-version: 6.0.x # SDK Version for building Dafny
  
jobs:
  populate-matrix-dimensions:
    runs-on: ubuntu-latest
    steps:
      - name: Populate OS list - all
        id: populate-os-list
        run: |
          echo "::set-output name=os-list::[\"ubuntu-latest\", \"ubuntu-18.04\", \"macos-latest\", \"windows-latest\"]"
      - name: Populate OS mapping for package.py
        run: |
          echo "::set-output name=os-mapping::\{\"ubuntu-latest\": \"ubuntu\"\}"
    outputs:
      os-list: ${{ steps.populate-os-list.outputs.os-list }}
  debug:
    needs: populate-matrix-dimensions
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: |
          echo ${{ fromJson(steps.populate-os-list.outputs.os-list) }}
  test:
    needs: populate-matrix-dimensions
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ${{ fromJson(needs.populate-matrix-dimensions.os-list) }}
        ## Size of the following array must match --num-shards in lit command
        shard: [1, 2, 3, 4, 5]
        include:
        - os:                  'ubuntu-latest'
          os_for_build:        'ubuntu'
        - os:                  'ubuntu-18.04'
          os_for_build:        'ubuntu'
        - os:                  'macos-latest'
          os_for_build:        'osx'
        - os:                  'windows-latest'
          os_for_build:        'win'

      fail-fast: false
    steps:
    - name: Manually sync certs
      if: runner.os == 'Linux'
      run: cert-sync /etc/ssl/certs/ca-certificates.crt
    - uses: actions/setup-python@v1
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1.9.0
      with:
        dotnet-version: ${{env.dotnet-version}}
    - name: C++ for ubuntu 18.04
      if: matrix.os == 'ubuntu-18.04'
      run: |
        sudo apt-get install -y build-essential
    - name: Choose the right C++ for ubuntu 18.04
      if: matrix.os == 'ubuntu-18.04'
      run: |
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 60
    - uses: actions/setup-python@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Upgrade outdated pip
      run: python -m pip install --upgrade pip
    - name: Install lit
      run: pip install lit OutputCheck pyyaml
    - uses: actions/setup-node@v1
    - run: npm install bignumber.js
    - name: Checkout Dafny
      uses: actions/checkout@v2
      with:
        path: dafny
        submodules: true
    - run: rm dafny/Test/libraries/lit.site.cfg # we remove the lit configuration file in the library repo (a git submodule) to prevent override
    - name: Create release
      run: |
        python dafny/Scripts/package.py 0.0.0-CI --os ${{ matrix.os_for_build }} --skip_manual=true --trial=true --github_secret=${{ secrets.GITHUB_TOKEN }} --out=CI.zip
    - if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Expand-Archive dafny/Package/CI.zip unzippedRelease
    - if: runner.os != 'Windows'
      run: |
        unzip dafny/Package/CI.zip -d unzippedRelease
    - name: Run integration tests
      if: runner.os == 'Windows'
      env:
        XUNIT_SHARD: ${{ matrix.shard }}
        XUNIT_SHARD_COUNT: 5
        DAFNY_RELEASE: ${{ github.workspace }}\unzippedRelease\dafny
      run: |
        dotnet test -v:n --logger trx dafny/Source/IntegrationTests/IntegrationTests.csproj
    - name: Run integration tests
      if: runner.os != 'Windows'
      env:
        XUNIT_SHARD: ${{ matrix.shard }}
        XUNIT_SHARD_COUNT: 5
        DAFNY_RELEASE: ${{ github.workspace }}/unzippedRelease/dafny
      run: |
        dotnet test -v:n --logger trx dafny/Source/IntegrationTests/IntegrationTests.csproj
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: integration-test-results-${{ matrix.os }}
        path: dafny/Source/IntegrationTests/TestResults/*.trx
