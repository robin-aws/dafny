// AttributeChecks.dfy


module JustAboutEverything {
  datatype List<T> = Nil | Cons(hd: T, tl: List<T>)

  datatype {:dt 0} {:dt false + 3} Datatype = {:dt k, this} Blue | {:dt 50} Green

  datatype {:dt 0} {:dt false + 3} AnotherDatatype = {:dt 50} Blue | {:dt k, this} Green

  iterator Iter(x: int) yields (y: int)
    requires {:myAttr false + 3} true
    modifies {:myAttr false + 3} {}
    yield requires {:myAttr false + 3} true
    yield ensures {:myAttr false + 3} true
    ensures {:myAttr false + 3} true
    decreases {:myAttr false + 3} x
  {
  }

  iterator Jter(x: int) yields (y: int)
    requires {:myAttr old(3)} true
    modifies {:myAttr old(3)} {}
    yield requires {:myAttr old(3)} true
    yield ensures {:myAttr old(3)} true
    ensures {:myAttr old(3)} true
    decreases {:myAttr old(3)} x
  {
  }

  iterator Kter(x: int) yields (y: int)
    requires {:myAttr x, y, ys} true
    modifies {:myAttr x, y, ys} {}
    yield requires {:myAttr x, y, ys} true
    yield ensures {:myAttr x, y, ys} true
    ensures {:myAttr x, y, ys} true
    decreases {:myAttr x, y, ys} x
  {
  }

  class CClass { }

  class DClass {
    constructor ()
    {
    }
  }

  datatype Option<+T> = None | Some(value: T) {
    predicate method IsFailure()
    {
      None?
    }

    function method PropagateFailure<U>(): Option<U>
      requires None?
    {
      None
    }

    function method Extract(): T
      requires Some?
    {
      value
    }
  }

  datatype MustHave<+T> = HasIt | DoesNotHave(value: T) {
    predicate method IsFailure()
    {
      DoesNotHave?
    }

    function method PropagateFailure(): Option<T>
      requires DoesNotHave?
    {
      None
    }
  }

  method If(n: int) returns (k: int)
  {
    var i := 0;
    if {:split true} i < n {
      if {:split 1 + 0} true {
      }
    } else if {:split false} i > n {
    } else {:split true} {
    }
  }

  method IfAlt(n: int) returns (k: int)
  {
    var i := 0;
    if {:split true}
    case {:split 1 + true} i < n =>
      if {:split 1 + k} true {
      }
    case {:split false} i > n =>
      {
      }
      return 2;
  }

  method While(n: int) returns (k: int)
  {
    var f: int -> int := x => x;
    var i := 0;
    while {:split true} {:split true + k} i < n
      invariant forall u :: f(u) == u + i
    {
    }
    return 2;
  }

  method WhileAlt(n: int) returns (k: int)
  {
    var i := 0;
    var f: int -> int := x => x;
    while {:split}
      invariant forall u :: f(u) == u + i
    {
      case {:split 1 + true} i < n =>
        {
        }
      case {:split false} i > n =>
        return 2;
    }
  }

  method Match(xs: List<int>) returns (r: int)
  {
    match {:split 1} xs {
      case {:split false} Cons(y, z) =>
        return y;
      case {:split 1 + false} Nil =>
        return 0;
    }
  }

  function method CaseExpr(r: List<int>): List<int>
  {
    match r {
      case Nil =>
        Nil
      case {:ignore 3 + true} Cons(h, Nil) =>
        Nil
      case {:ignore false} Cons(h, t) =>
        CaseExpr(t)
    }
  }

  method Calc(x: int, y: int)
  {
    calc {:split 1} {:split 1 + false} {
      x + y;
      {
        assume x == 0;
      }
      y;
    }
    assert x == 0;
  }

  method ForAll(i: int, j: int, arr: array2<int>)
  {
    forall i, j {:split 1 + false} {:split i + j} | i in {-3, 4} && j in {1, 2} {
      arr[i, j] := 0;
    }
  }

  method AssertBy(x: int, y: int)
  {
    assert {:split false + x} {:split} x == 6 by {
      assume x == 6;
      assume y == 8;
    }
    assert {:split} y == 8;
  }

  method For(lo: int, hi: int) returns (k: int)
    requires lo <= hi
  {
    var f: int -> int := x => x;
    for {:split i} {:split true + k} i := lo to hi
      invariant forall u :: f(u) == u + i
    {
    }
    return 2;
  }

  function FAttr(x: int): int
    requires {:myAttr false + 3} true
    ensures {:myAttr false + 3} true
    decreases {:myAttr false + 3} x
  {
    10
  }

  function GAttr(x: int): int
    requires {:myAttr old(3)} true
    ensures {:myAttr old(3)} true
    decreases {:myAttr old(3)} x
  {
    10
  }

  function HAttr(x: int): (r: int)
    requires {:myAttr x, r} true
    ensures {:myAttr x, r} true
    decreases {:myAttr x, r} x
  {
    10
  }

  twostate function F2Attr(x: int): int
    requires {:myAttr false + 3} true
    ensures {:myAttr false + 3} true
    decreases {:myAttr false + 3} x
  {
    10
  }

  twostate function G2Attr(x: int): int
    requires {:myAttr old(3)} true
    ensures {:myAttr old(3)} true
    decreases {:myAttr old(3)} x
  {
    10
  }

  twostate function H2Attr(x: int): (r: int)
    requires {:myAttr x, r} true
    ensures {:myAttr x, r} true
    decreases {:myAttr x, r} x
  {
    10
  }

  method MAttr(x: int) returns (y: int)
    requires {:myAttr false + 3} true
    modifies {:myAttr false + 3} {}
    ensures {:myAttr false + 3} true
    decreases {:myAttr false + 3} x
  {
  }

  method NAttr(x: int) returns (y: int)
    requires {:myAttr old(3)} true
    modifies {:myAttr old(3)} {}
    ensures {:myAttr old(3)} true
    decreases {:myAttr old(3)} x
  {
  }

  method OAttr(x: int) returns (y: int)
    requires {:myAttr x, y} true
    modifies {:myAttr x, y} {}
    ensures {:myAttr x, y} true
    decreases {:myAttr x, y} x
  {
  }

  twostate lemma M2Attr(x: int) returns (y: int)
    requires {:myAttr false + 3} true
    modifies {:myAttr false + 3} {}
    ensures {:myAttr false + 3} true
    decreases {:myAttr false + 3} x
  {
  }

  twostate lemma N2Attr(x: int) returns (y: int)
    requires {:myAttr old(3)} true
    modifies {:myAttr old(3)} {}
    ensures {:myAttr old(3)} true
    decreases {:myAttr old(3)} x
  {
  }

  twostate lemma O2Attr(x: int) returns (y: int)
    requires {:myAttr x, y} true
    modifies {:myAttr x, y} {}
    ensures {:myAttr x, y} true
    decreases {:myAttr x, y} x
  {
  }

  method ModifyStatement(s: set<object>)
  {
    modify {:myAttr false + 3} s;
  }

  method LocalVariablesAndAssignments(opt: Option<int>, mustHave: MustHave<int>) returns (r: Option<int>)
  {
    var {:boolAttr false + 3} a: int, {:boolAttr false + 3} b: int;
    var x, y := 10 {:boolAttr false + 3}, 20 {:boolAttr false + 3};
    x, y := 10 {:boolAttr false + 3}, 20 {:boolAttr false + 3};
    var {:boolAttr false + 3} u0 := If(13);
    var u1 := If(13) {:boolAttr false + 3};
    u1 := If(13) {:boolAttr false + 3};
    var {:boolAttr false + 3} k0: int := *;
    var k1: int := * {:boolAttr false + 3};
    k1 := * {:boolAttr false + 3};
    var {:boolAttr false + 3} c0 := new CClass;
    var c1 := new CClass {:boolAttr false + 3};
    c1 := new CClass {:boolAttr false + 3};
    var {:boolAttr false + 3} d0 := new DClass();
    var d1 := new DClass() {:boolAttr false + 3};
    d1 := new DClass() {:boolAttr false + 3};
    var s := {101};
    var {:boolAttr false + 3} w0 :| w0 in s;
    var {:boolAttr false + 3} w1, {:boolAttr false + 3} w2 :| w1 in s && w2 in s;
    w1, w2 :| assume {:boolAttr false + 3} w1 in s && w2 in s;
    var {:boolAttr false + 3} f0 :- opt;
    var {:boolAttr false + 3} f1, {:boolAttr false + 3} f2 :- opt, true;
    var {:boolAttr false + 3} f3 :- GiveOption();
    var {:boolAttr false + 3} f4, {:boolAttr false + 3} f5 :- GiveOptions();
    var g0 :- opt {:boolAttr false + 3};
    var g1, g2 :- opt {:boolAttr false + 3}, true {:boolAttr false + 3};
    var g3, g4, g5 :- opt {:boolAttr false + 3}, true {:boolAttr false + 4}, true {:boolAttr false + 5};
    var g6 :- GiveOption() {:boolAttr false + 3};
    var g7, g8 :- GiveOptions() {:boolAttr false + 3};
    :- mustHave {:boolAttr false + 3};
    :- GiveMustHave() {:boolAttr false + 3};
    var p0 :- assert {:boolAttr false + 3} opt;
    var p1 :- assume {:boolAttr false + 3} opt;
    var p2 :- expect {:boolAttr false + 3} opt;
    p0 :- assert {:boolAttr false + 3} opt;
    p1 :- assume {:boolAttr false + 3} opt;
    p2 :- expect {:boolAttr false + 3} opt;
    var q0 :- assert {:boolAttr false + 3} GiveOption();
    var q1 :- assume {:boolAttr false + 3} GiveOption();
    var q2 :- expect {:boolAttr false + 3} GiveOption();
    q0 :- assert {:boolAttr false + 3} GiveOption();
    q1 :- assume {:boolAttr false + 3} GiveOption();
    q2 :- expect {:boolAttr false + 3} GiveOption();
    var i := var a, b {:boolAttr false + 3} :| a == 0 && b == 1; 100;
  }

  function ExtendedPrintExpr(): int
  {
    var a, b {:boolAttr false + 3} :| a == 0 && b == 1;
    100
  }

  method GiveOption() returns (r: Option<int>)

  method GiveOptions() returns (r: Option<int>, s: int)

  method GiveMustHave() returns (r: MustHave<int>)
}

module {:myAttr false + 3} {:myAttr old(3)} {:myAttr k} Modu {
}

module TwoStateAttributes {
  class C {
    var data: int

    function {:myAttr old(data), x, r} F(x: int): (r: int)

    twostate function {:myAttr old(data), x, r} F2(x: int): (r: int)

    lemma {:myAttr old(data), x, y} L(x: int) returns (y: int)

    twostate lemma {:myAttr old(data), x, y} L2(x: int) returns (y: int)

    method {:myAttr old(data), x, y} M(x: int) returns (y: int)

    least predicate {:myAttr old(data), x} LP(x: int)

    least lemma {:myAttr old(data), x} LL(x: int)
  }
}

module TopLevelAttributes {
  iterator {:myAttr x} {:myAttr y} {:myAttr this} {:myAttr ys} {:myAttr old(arr[0])} Iterator(x: int, arr: array<int>) yields (y: int)
    requires arr.Length != 0

  type {:myAttr this} {:myAttr N} Opaque {
    const N: int
  }

  type {:myAttr this} Subset = x: int
    | true

  type {:myAttr this} Synonym = int

  newtype {:myAttr this} {:myAttr N} Newtype = x: int
    | true
  {
    const N: int
  }

  trait {:myAttr this} {:myAttr x} Trait {
    var x: int
  }

  class {:myAttr this} {:myAttr x} Class {
    var x: int
  }

  datatype {:myAttr this} {:myAttr Ctor?} {:myAttr y} {:myAttr N} Datatype = Ctor(y: int) {
    const N: int
  }

  codatatype {:myAttr this} {:myAttr Ctor?} {:myAttr y} {:myAttr N} CoDatatype = Ctor(y: int) {
    const N: int
  }
}

module TopLevelAttributesModule {

  module {:myAttr this} Module {
  }
}
AttributeChecks.dfy(104,9): Error: unresolved identifier: k
AttributeChecks.dfy(104,12): Error: 'this' is not allowed in a 'static' context
AttributeChecks.dfy(103,30): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(103,30): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(107,27): Error: unresolved identifier: k
AttributeChecks.dfy(107,30): Error: 'this' is not allowed in a 'static' context
AttributeChecks.dfy(106,30): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(106,30): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(211,29): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(208,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(206,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(207,34): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(209,33): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(210,27): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(211,29): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(208,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(206,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(207,34): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(209,33): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(210,27): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(221,23): Error: old expressions are not allowed in this context
AttributeChecks.dfy(218,22): Error: old expressions are not allowed in this context
AttributeChecks.dfy(216,22): Error: old expressions are not allowed in this context
AttributeChecks.dfy(217,28): Error: old expressions are not allowed in this context
AttributeChecks.dfy(231,26): Error: unresolved identifier: y
AttributeChecks.dfy(231,29): Error: unresolved identifier: ys
AttributeChecks.dfy(228,25): Error: unresolved identifier: y
AttributeChecks.dfy(228,28): Error: unresolved identifier: ys
AttributeChecks.dfy(226,25): Error: unresolved identifier: y
AttributeChecks.dfy(226,28): Error: unresolved identifier: ys
AttributeChecks.dfy(19,19): Error: type of left argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(19,19): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(29,37): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(29,37): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(43,21): Error: type of left argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(43,21): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(53,21): Error: type of left argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(53,21): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(61,22): Error: type of left argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(61,22): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(68,30): Error: type of left argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(68,30): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(78,27): Error: type of left argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(78,27): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(85,25): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(85,25): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(96,32): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(96,32): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(110,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(111,27): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(112,29): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(110,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(111,27): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(112,29): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(118,22): Error: old expressions are not allowed in this context
AttributeChecks.dfy(119,21): Error: old expressions are not allowed in this context
AttributeChecks.dfy(120,23): Error: old expressions are not allowed in this context
AttributeChecks.dfy(126,25): Error: unresolved identifier: r
AttributeChecks.dfy(128,26): Error: unresolved identifier: r
AttributeChecks.dfy(134,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(135,27): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(136,29): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(134,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(135,27): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(136,29): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(150,25): Error: unresolved identifier: r
AttributeChecks.dfy(152,26): Error: unresolved identifier: r
AttributeChecks.dfy(158,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(159,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(161,29): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(160,27): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(158,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(159,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(161,29): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(160,27): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(166,22): Error: old expressions are not allowed in this context
AttributeChecks.dfy(167,22): Error: old expressions are not allowed in this context
AttributeChecks.dfy(169,23): Error: old expressions are not allowed in this context
AttributeChecks.dfy(174,25): Error: unresolved identifier: y
AttributeChecks.dfy(175,25): Error: unresolved identifier: y
AttributeChecks.dfy(177,26): Error: unresolved identifier: y
AttributeChecks.dfy(183,33): Error: twostate lemmas are not allowed to have modifies clauses
AttributeChecks.dfy(182,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(183,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(185,29): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(184,27): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(182,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(183,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(185,29): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(184,27): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(191,22): Error: old expressions are not allowed in this context
AttributeChecks.dfy(191,30): Error: twostate lemmas are not allowed to have modifies clauses
AttributeChecks.dfy(193,23): Error: old expressions are not allowed in this context
AttributeChecks.dfy(198,25): Error: unresolved identifier: y
AttributeChecks.dfy(199,25): Error: unresolved identifier: y
AttributeChecks.dfy(199,28): Error: twostate lemmas are not allowed to have modifies clauses
AttributeChecks.dfy(201,26): Error: unresolved identifier: y
AttributeChecks.dfy(236,26): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(236,26): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(242,23): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(243,23): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(247,26): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(248,26): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(250,26): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(251,26): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(254,25): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(255,38): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(256,34): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(259,25): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(260,38): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(261,29): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(264,25): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(265,42): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(266,38): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(267,25): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(268,44): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(269,40): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(273,25): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(275,23): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(276,23): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(280,38): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(283,25): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(285,23): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(286,23): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(289,25): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(291,23): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(292,23): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(296,35): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(298,27): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(299,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(301,27): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(302,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(303,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(305,44): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(306,49): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(308,33): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(309,39): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(312,38): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(313,38): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(314,38): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(315,34): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(316,34): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(317,34): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(320,38): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(321,38): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(322,38): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(323,34): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(324,34): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(325,34): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(329,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(242,23): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(243,23): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(247,26): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(248,26): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(250,26): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(251,26): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(254,25): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(255,38): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(256,34): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(259,25): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(260,38): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(261,29): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(264,25): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(265,42): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(266,38): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(267,25): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(268,44): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(269,40): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(273,25): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(275,23): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(276,23): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(280,38): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(283,25): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(285,23): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(286,23): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(289,25): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(291,23): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(292,23): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(296,35): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(298,27): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(299,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(301,27): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(302,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(303,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(305,44): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(306,49): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(308,33): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(309,39): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(312,38): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(313,38): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(314,38): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(315,34): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(316,34): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(317,34): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(320,38): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(321,38): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(322,38): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(323,34): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(324,34): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(325,34): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(329,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(335,28): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(335,28): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(380,11): Error: unresolved identifier: k
AttributeChecks.dfy(379,11): Error: old expressions are not allowed in this context
AttributeChecks.dfy(378,17): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
AttributeChecks.dfy(378,17): Error: type of right argument to + (int) must agree with the result type (bool)
AttributeChecks.dfy(389,22): Error: old expressions are not allowed in this context
AttributeChecks.dfy(393,19): Error: old expressions are not allowed in this context
AttributeChecks.dfy(397,20): Error: old expressions are not allowed in this context
AttributeChecks.dfy(399,29): Error: old expressions are not allowed in this context
AttributeChecks.dfy(401,25): Error: old expressions are not allowed in this context
AttributeChecks.dfy(414,13): Error: old expressions are not allowed in this context
AttributeChecks.dfy(413,13): Error: unresolved identifier: ys
AttributeChecks.dfy(412,13): Error: 'this' is not allowed in a 'static' context
AttributeChecks.dfy(411,13): Error: unresolved identifier: y
AttributeChecks.dfy(422,13): Error: unresolved identifier: N
AttributeChecks.dfy(421,13): Error: 'this' is not allowed in a 'static' context
AttributeChecks.dfy(430,16): Error: 'this' is not allowed in a 'static' context
AttributeChecks.dfy(434,16): Error: 'this' is not allowed in a 'static' context
AttributeChecks.dfy(440,13): Error: unresolved identifier: N
AttributeChecks.dfy(439,13): Error: 'this' is not allowed in a 'static' context
AttributeChecks.dfy(450,13): Error: unresolved identifier: x
AttributeChecks.dfy(449,13): Error: 'this' is not allowed in a 'static' context
AttributeChecks.dfy(460,13): Error: unresolved identifier: x
AttributeChecks.dfy(459,13): Error: 'this' is not allowed in a 'static' context
AttributeChecks.dfy(472,13): Error: unresolved identifier: N
AttributeChecks.dfy(471,13): Error: unresolved identifier: y
AttributeChecks.dfy(470,13): Error: unresolved identifier: Ctor?
AttributeChecks.dfy(469,13): Error: 'this' is not allowed in a 'static' context
AttributeChecks.dfy(484,13): Error: unresolved identifier: N
AttributeChecks.dfy(483,13): Error: unresolved identifier: y
AttributeChecks.dfy(482,13): Error: unresolved identifier: Ctor?
AttributeChecks.dfy(481,13): Error: 'this' is not allowed in a 'static' context
AttributeChecks.dfy(494,18): Error: 'this' is not allowed in a 'static' context
235 resolution/type errors detected in AttributeChecks.dfy
